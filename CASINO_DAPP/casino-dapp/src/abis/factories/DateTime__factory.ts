/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DateTime, DateTimeInterface } from "../DateTime";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
    ],
    name: "isLeapYear",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "year",
        type: "uint256",
      },
    ],
    name: "leapYearsBefore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
    ],
    name: "getDaysInMonth",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getYear",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getMonth",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getDay",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getHour",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getMinute",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getSecond",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getWeekday",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "day",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "hour",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "minute",
        type: "uint8",
      },
    ],
    name: "toTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "day",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "hour",
        type: "uint8",
      },
    ],
    name: "toTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "day",
        type: "uint8",
      },
    ],
    name: "toTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "day",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "hour",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "minute",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "second",
        type: "uint8",
      },
    ],
    name: "toTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "dayStartTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "weekStartTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e7d806100206000396000f3fe608060405234801561001057600080fd5b506004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900480639054bdec116100b4578063b199993711610083578063b19999371461024e578063b238ad0e14610261578063fa93f88314610274578063fddc75e81461028757600080fd5b80639054bdec146101df57806392d66313146101f2578063a324ad2414610218578063a6f0e5771461022b57600080fd5b806365c72840116100f057806365c72840146101935780637f791833146101a65780638aa001fc146101b95780638c8d98a0146101cc57600080fd5b806325d67212146101225780633e239e1a146101485780634ac1ad781461016d57806362ba968714610180575b600080fd5b610135610130366004610a25565b61029a565b6040519081526020015b60405180910390f35b61015b610156366004610a25565b6102c0565b60405160ff909116815260200161013f565b61015b61017b366004610a25565b6102e4565b61013561018e366004610a66565b610300565b61015b6101a1366004610a25565b61031b565b6101356101b4366004610acb565b610330565b61015b6101c7366004610a25565b61034a565b6101356101da366004610b1f565b610357565b6101356101ed366004610b62565b610371565b610205610200366004610a25565b610522565b60405161ffff909116815260200161013f565b61015b610226366004610a25565b610612565b61023e610239366004610bd6565b610627565b604051901515815260200161013f565b61013561025c366004610a25565b610686565b61015b61026f366004610bf8565b6106cb565b61015b610282366004610a25565b610792565b610135610295366004610a25565b6107a0565b60006102ba6102a883610522565b6102b184610612565b6101da8561031b565b92915050565b60006018603c6102d08185610c89565b6102da9190610c89565b6102ba9190610c9d565b600060076102f56201518084610c89565b6102da906004610cb1565b600061031186868686866000610371565b9695505050505050565b6000610326826107e2565b6040015192915050565b600061034185858585600080610371565b95945050505050565b60006102ba603c83610c9d565b60006103698484846000806000610371565b949350505050565b60006107b25b8761ffff168161ffff1610156103cd5761039081610627565b156103aa576103a36301e2850083610cb1565b91506103bb565b6103b86301e1338083610cb1565b91505b806103c581610cc9565b915050610377565b6103d5610a06565b601f81526103e289610627565b156103f357601d60208201526103fb565b601c60208201525b601f60408201819052601e606083018190526080830182905260a0830181905260c0830182905260e0830182905261010083018190526101208301829052610140830152610160820152600191505b8760ff168261ffff1610156104ac5780610465600184610d1a565b61ffff16600c811061047957610479610ceb565b602002015161048e9060ff1662015180610d3d565b6104989084610cb1565b9250816104a481610cc9565b92505061044a565b6104b7600188610d5c565b6104c79060ff1662015180610d3d565b6104d19084610cb1565b92506104e260ff8716610e10610d3d565b6104ec9084610cb1565b92506104fc60ff8616603c610d3d565b6105069084610cb1565b925061051560ff851684610cb1565b9998505050505050505050565b60008080806105356301e1338086610c89565b610541906107b2610cb1565b915061054e6107b2610686565b61055b8361ffff16610686565b6105659190610d7f565b9050610575816301e28500610d3d565b61057f9084610cb1565b92508061058e6107b284610d1a565b61ffff1661059c9190610d7f565b6105aa906301e13380610d3d565b6105b49084610cb1565b92505b8483111561060a576105cd610239600184610d1a565b156105e7576105e06301e2850084610d7f565b92506105f8565b6105f56301e1338084610d7f565b92505b610603600183610d1a565b91506105b7565b509392505050565b600061061d826107e2565b6020015192915050565b6000610634600483610d96565b61ffff161561064557506000919050565b610650606483610d96565b61ffff161561066157506001919050565b61066d61019083610d96565b61ffff161561067e57506000919050565b506001919050565b6000610693600183610d7f565b91506106a161019083610c89565b6106ac606484610c89565b6106b7600485610c89565b6106c19190610d7f565b6102ba9190610cb1565b60008260ff16600114806106e257508260ff166003145b806106f057508260ff166005145b806106fe57508260ff166007145b8061070c57508260ff166008145b8061071a57508260ff16600a145b8061072857508260ff16600c145b156107355750601f6102ba565b8260ff166004148061074a57508260ff166006145b8061075857508260ff166009145b8061076657508260ff16600b145b156107735750601e6102ba565b61077c82610627565b156107895750601d6102ba565b50601c92915050565b6000603c6102da8184610c89565b60006102ba6107ae83610522565b6107b784610612565b60076107c28661031b565b6107cc9190610db7565b6107d7906007610dd9565b6101da906001610e02565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091526040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091526000808061086186610522565b61ffff1684526108726107b2610686565b84516108819061ffff16610686565b61088b9190610d7f565b915061089b826301e28500610d3d565b6108a59084610cb1565b9250816107b285600001516108ba9190610d1a565b61ffff166108c89190610d7f565b6108d6906301e13380610d3d565b6108e09084610cb1565b92506000600191505b600c8260ff1611610951576109028286600001516106cb565b6109129060ff1662015180610d3d565b90508661091f8583610cb1565b11156109335760ff82166020860152610951565b61093d8185610cb1565b93508161094981610e27565b9250506108e9565b600191505b610968856020015186600001516106cb565b60ff168260ff16116109b757866109828562015180610cb1565b11156109965760ff821660408601526109b7565b6109a36201518085610cb1565b9350816109af81610e27565b925050610956565b6109c0876102c0565b60ff1660608601526109d187610792565b60ff1660808601526109e28761034a565b60ff1660a08601526109f3876102e4565b60ff1660c0860152509295945050505050565b604051806101800160405280600c906020820280368337509192915050565b600060208284031215610a3757600080fd5b5035919050565b803561ffff81168114610a5057600080fd5b919050565b803560ff81168114610a5057600080fd5b600080600080600060a08688031215610a7e57600080fd5b610a8786610a3e565b9450610a9560208701610a55565b9350610aa360408701610a55565b9250610ab160608701610a55565b9150610abf60808701610a55565b90509295509295909350565b60008060008060808587031215610ae157600080fd5b610aea85610a3e565b9350610af860208601610a55565b9250610b0660408601610a55565b9150610b1460608601610a55565b905092959194509250565b600080600060608486031215610b3457600080fd5b610b3d84610a3e565b9250610b4b60208501610a55565b9150610b5960408501610a55565b90509250925092565b60008060008060008060c08789031215610b7b57600080fd5b610b8487610a3e565b9550610b9260208801610a55565b9450610ba060408801610a55565b9350610bae60608801610a55565b9250610bbc60808801610a55565b9150610bca60a08801610a55565b90509295509295509295565b600060208284031215610be857600080fd5b610bf182610a3e565b9392505050565b60008060408385031215610c0b57600080fd5b610c1483610a55565b9150610c2260208401610a3e565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082610c9857610c98610c2b565b500490565b600082610cac57610cac610c2b565b500690565b60008219821115610cc457610cc4610c5a565b500190565b600061ffff80831681811415610ce157610ce1610c5a565b6001019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061ffff83811690831681811015610d3557610d35610c5a565b039392505050565b6000816000190483118215151615610d5757610d57610c5a565b500290565b600060ff821660ff841680821015610d7657610d76610c5a565b90039392505050565b600082821015610d9157610d91610c5a565b500390565b600061ffff80841680610dab57610dab610c2b565b92169190910692915050565b600060ff831680610dca57610dca610c2b565b8060ff84160491505092915050565b600060ff821660ff84168160ff0481118215151615610dfa57610dfa610c5a565b029392505050565b600060ff821660ff84168060ff03821115610e1f57610e1f610c5a565b019392505050565b600060ff821660ff811415610e3e57610e3e610c5a565b6001019291505056fea264697066735822122099e5a2601ffd1fd552380a53fca74bf8d7252cc217bedc944d93f1723c240d7e64736f6c634300080c0033";

type DateTimeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DateTimeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DateTime__factory extends ContractFactory {
  constructor(...args: DateTimeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<DateTime> {
    return super.deploy(overrides || {}) as Promise<DateTime>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DateTime {
    return super.attach(address) as DateTime;
  }
  override connect(signer: Signer): DateTime__factory {
    return super.connect(signer) as DateTime__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DateTimeInterface {
    return new utils.Interface(_abi) as DateTimeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DateTime {
    return new Contract(address, _abi, signerOrProvider) as DateTime;
  }
}
