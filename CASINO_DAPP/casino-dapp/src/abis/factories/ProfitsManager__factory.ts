/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProfitsManager,
  ProfitsManagerInterface,
} from "../ProfitsManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rouletteCA",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "dailyLosses",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "dailyProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "dayStartTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getDay",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
    ],
    name: "getDaysInMonth",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getHour",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getMinute",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getMonth",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getSecond",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getWeekday",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getYear",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
    ],
    name: "isLeapYear",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "year",
        type: "uint256",
      },
    ],
    name: "leapYearsBefore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "maxDailyProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWeeklyProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rouletteCA",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "day",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "hour",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "minute",
        type: "uint8",
      },
    ],
    name: "toTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "day",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "hour",
        type: "uint8",
      },
    ],
    name: "toTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "day",
        type: "uint8",
      },
    ],
    name: "toTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "year",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "month",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "day",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "hour",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "minute",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "second",
        type: "uint8",
      },
    ],
    name: "toTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "weekStartTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "weeklyLosses",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "weeklyProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "getUserDailyProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "getUserWeeklyProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "getUserDailyLosses",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "getUserWeeklyLosses",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "amountLeftForDailyMaxProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "amountLeftForWeeklyMaxProfit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "maxDailyProfitReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
    ],
    name: "maxWeeklyProfitReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "profitDollars",
        type: "uint256",
      },
    ],
    name: "registerProfits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lossesDollars",
        type: "uint256",
      },
    ],
    name: "registerLosses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxDailyProfit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxWeeklyProfit",
        type: "uint256",
      },
    ],
    name: "_setMaxDailyWeeklyProfit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052603260055561012c60065534801561001b57600080fd5b5060405161184f38038061184f83398101604081905261003a9161005f565b60008054600160a060020a031916600160a060020a039290921691909117905561008f565b60006020828403121561007157600080fd5b8151600160a060020a038116811461008857600080fd5b9392505050565b6117b18061009e6000396000f3fe608060405234801561001057600080fd5b5060043610610243576000357c01000000000000000000000000000000000000000000000000000000009004806392d6631311610147578063b238ad0e116100da578063e5c409db116100a9578063f660db661161008e578063f660db661461055d578063fa93f88314610570578063fddc75e81461058357600080fd5b8063e5c409db14610537578063e7fafc971461054a57600080fd5b8063b238ad0e146104a1578063bfec2fbe146104b4578063c7d73a33146104c7578063c9500ac7146104f257600080fd5b8063a6f0e57711610116578063a6f0e57714610455578063ae0b3c4214610468578063ae7ac5bd1461047b578063b19999371461048e57600080fd5b806392d66313146103c657806398321d8c146103ec5780639ca4d4b114610417578063a324ad241461044257600080fd5b806362ba9687116101da5780637fe02457116101a95780638aa001fc1161018e5780638aa001fc1461038d5780638c8d98a0146103a05780639054bdec146103b357600080fd5b80637fe024571461035957806387c7869a1461038457600080fd5b806362ba96871461030d57806365c728401461032057806376eb567a146103335780637f7918331461034657600080fd5b80634ac1ad78116102165780634ac1ad78146102c95780634fcd2a9d146102dc578063573d52fe146102f1578063603bc17a146102fa57600080fd5b80631587adb81461024857806319d4328a1461027057806325d67212146102915780633e239e1a146102a4575b600080fd5b61025b6102563660046112fe565b610596565b60405190151581526020015b60405180910390f35b61028361027e3660046112fe565b6105d0565b604051908152602001610267565b61028361029f366004611319565b610649565b6102b76102b2366004611319565b61066f565b60405160ff9091168152602001610267565b6102b76102d7366004611319565b610693565b6102ef6102ea366004611332565b6106af565b005b61028360065481565b61025b6103083660046112fe565b6107dd565b61028361031b36600461137f565b61080d565b6102b761032e366004611319565b610828565b6102836103413660046112fe565b61083d565b6102836103543660046113e4565b61089f565b610283610367366004611332565b600160209081526000928352604080842090915290825290205481565b61028360055481565b6102b761039b366004611319565b6108b0565b6102836103ae366004611438565b6108bd565b6102836103c136600461147b565b6108cb565b6103d96103d4366004611319565b610a7c565b60405161ffff9091168152602001610267565b6102836103fa366004611332565b600460209081526000928352604080842090915290825290205481565b610283610425366004611332565b600360209081526000928352604080842090915290825290205481565b6102b7610450366004611319565b610b6c565b61025b6104633660046114ef565b610b81565b6102836104763660046112fe565b610be0565b6102836104893660046112fe565b610c25565b61028361049c366004611319565b610c54565b6102b76104af36600461150a565b610c99565b6102ef6104c236600461153d565b610d60565b6102836104d5366004611332565b600260209081526000928352604080842090915290825290205481565b6000546105129073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610267565b6102836105453660046112fe565b610ec2565b6102836105583660046112fe565b610ef1565b6102ef61056b366004611332565b610f20565b6102b761057e366004611319565b611023565b610283610591366004611319565b611031565b6000806105a283610be0565b905060006105af84610c25565b90506105c66005548261107390919063ffffffff16565b9091119392505050565b6000806105dc83610be0565b905060006105e984610c25565b905080821061062a5760006105fe8383611086565b9050600554811061061457506000949350505050565b6005546106219082611086565b95945050505050565b6005546106419061063b8385611086565b90611073565b949350505050565b600061066961065783610a7c565b61066084610b6c565b6103ae85610828565b92915050565b60006018603c61067f81856115bd565b61068991906115bd565b61066991906115d1565b600060076106a462015180846115bd565b6106899060046115e5565b60005473ffffffffffffffffffffffffffffffffffffffff163314610735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4f6e6c7920726f756c657474650000000000000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152600160205260408120829161076542610649565b8152602001908152602001600020600082825461078291906115e5565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040812082916107b742611031565b815260200190815260200160002060008282546107d491906115e5565b90915550505050565b6000806107e983610ec2565b905060006107f684610ef1565b90506105c66006548261107390919063ffffffff16565b600061081e868686868660006108cb565b9695505050505050565b600061083382611092565b6040015192915050565b60008061084983610ec2565b9050600061085684610ef1565b905080821061088e57600061086b8383611086565b9050600654811061088157506000949350505050565b6006546106219082611086565b6006546106419061063b8385611086565b6000610621858585856000806108cb565b6000610669603c836115d1565b600061064184848460008060005b60006107b25b8761ffff168161ffff161015610927576108ea81610b81565b15610904576108fd6301e28500836115e5565b9150610915565b6109126301e13380836115e5565b91505b8061091f816115fd565b9150506108d1565b61092f6112b6565b601f815261093c89610b81565b1561094d57601d6020820152610955565b601c60208201525b601f60408201819052601e606083018190526080830182905260a0830181905260c0830182905260e0830182905261010083018190526101208301829052610140830152610160820152600191505b8760ff168261ffff161015610a0657806109bf60018461164e565b61ffff16600c81106109d3576109d361161f565b60200201516109e89060ff1662015180611671565b6109f290846115e5565b9250816109fe816115fd565b9250506109a4565b610a11600188611690565b610a219060ff1662015180611671565b610a2b90846115e5565b9250610a3c60ff8716610e10611671565b610a4690846115e5565b9250610a5660ff8616603c611671565b610a6090846115e5565b9250610a6f60ff8516846115e5565b9998505050505050505050565b6000808080610a8f6301e13380866115bd565b610a9b906107b26115e5565b9150610aa86107b2610c54565b610ab58361ffff16610c54565b610abf91906116b3565b9050610acf816301e28500611671565b610ad990846115e5565b925080610ae86107b28461164e565b61ffff16610af691906116b3565b610b04906301e13380611671565b610b0e90846115e5565b92505b84831115610b6457610b2761046360018461164e565b15610b4157610b3a6301e28500846116b3565b9250610b52565b610b4f6301e13380846116b3565b92505b610b5d60018361164e565b9150610b11565b509392505050565b6000610b7782611092565b6020015192915050565b6000610b8e6004836116ca565b61ffff1615610b9f57506000919050565b610baa6064836116ca565b61ffff1615610bbb57506001919050565b610bc7610190836116ca565b61ffff1615610bd857506000919050565b506001919050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020526040812081610c0f42610649565b8152602001908152602001600020549050919050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260026020526040812081610c0f42610649565b6000610c616001836116b3565b9150610c6f610190836115bd565b610c7a6064846115bd565b610c856004856115bd565b610c8f91906116b3565b61066991906115e5565b60008260ff1660011480610cb057508260ff166003145b80610cbe57508260ff166005145b80610ccc57508260ff166007145b80610cda57508260ff166008145b80610ce857508260ff16600a145b80610cf657508260ff16600c145b15610d035750601f610669565b8260ff1660041480610d1857508260ff166006145b80610d2657508260ff166009145b80610d3457508260ff16600b145b15610d415750601e610669565b610d4a82610b81565b15610d575750601d610669565b50601c92915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610de1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4f6e6c7920726f756c6574746500000000000000000000000000000000000000604482015260640161072c565b6019821015610e4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f43616e206e6f74206265206c6f776572207468616e2032350000000000000000604482015260640161072c565b6064811015610eb7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f43616e206e6f74206265206c6f776572207468616e2031303000000000000000604482015260640161072c565b600591909155600655565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260036020526040812081610c0f42611031565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260046020526040812081610c0f42611031565b60005473ffffffffffffffffffffffffffffffffffffffff163314610fa1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4f6e6c7920726f756c6574746500000000000000000000000000000000000000604482015260640161072c565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604081208291610fd142610649565b81526020019081526020016000206000828254610fee91906115e5565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260046020526040812082916107b742611031565b6000603c61068981846115bd565b600061066961103f83610a7c565b61104884610b6c565b600761105386610828565b61105d91906116eb565b61106890600761170d565b6103ae906001611736565b600061107f82846115e5565b9392505050565b600061107f82846116b3565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091526040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091526000808061111186610a7c565b61ffff1684526111226107b2610c54565b84516111319061ffff16610c54565b61113b91906116b3565b915061114b826301e28500611671565b61115590846115e5565b9250816107b2856000015161116a919061164e565b61ffff1661117891906116b3565b611186906301e13380611671565b61119090846115e5565b92506000600191505b600c8260ff1611611201576111b2828660000151610c99565b6111c29060ff1662015180611671565b9050866111cf85836115e5565b11156111e35760ff82166020860152611201565b6111ed81856115e5565b9350816111f98161175b565b925050611199565b600191505b61121885602001518660000151610c99565b60ff168260ff1611611267578661123285620151806115e5565b11156112465760ff82166040860152611267565b61125362015180856115e5565b93508161125f8161175b565b925050611206565b6112708761066f565b60ff16606086015261128187611023565b60ff166080860152611292876108b0565b60ff1660a08601526112a387610693565b60ff1660c0860152509295945050505050565b604051806101800160405280600c906020820280368337509192915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146112f957600080fd5b919050565b60006020828403121561131057600080fd5b61107f826112d5565b60006020828403121561132b57600080fd5b5035919050565b6000806040838503121561134557600080fd5b61134e836112d5565b946020939093013593505050565b803561ffff811681146112f957600080fd5b803560ff811681146112f957600080fd5b600080600080600060a0868803121561139757600080fd5b6113a08661135c565b94506113ae6020870161136e565b93506113bc6040870161136e565b92506113ca6060870161136e565b91506113d86080870161136e565b90509295509295909350565b600080600080608085870312156113fa57600080fd5b6114038561135c565b93506114116020860161136e565b925061141f6040860161136e565b915061142d6060860161136e565b905092959194509250565b60008060006060848603121561144d57600080fd5b6114568461135c565b92506114646020850161136e565b91506114726040850161136e565b90509250925092565b60008060008060008060c0878903121561149457600080fd5b61149d8761135c565b95506114ab6020880161136e565b94506114b96040880161136e565b93506114c76060880161136e565b92506114d56080880161136e565b91506114e360a0880161136e565b90509295509295509295565b60006020828403121561150157600080fd5b61107f8261135c565b6000806040838503121561151d57600080fd5b6115268361136e565b91506115346020840161135c565b90509250929050565b6000806040838503121561155057600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000826115cc576115cc61155f565b500490565b6000826115e0576115e061155f565b500690565b600082198211156115f8576115f861158e565b500190565b600061ffff808316818114156116155761161561158e565b6001019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061ffff838116908316818110156116695761166961158e565b039392505050565b600081600019048311821515161561168b5761168b61158e565b500290565b600060ff821660ff8416808210156116aa576116aa61158e565b90039392505050565b6000828210156116c5576116c561158e565b500390565b600061ffff808416806116df576116df61155f565b92169190910692915050565b600060ff8316806116fe576116fe61155f565b8060ff84160491505092915050565b600060ff821660ff84168160ff048111821515161561172e5761172e61158e565b029392505050565b600060ff821660ff84168060ff038211156117535761175361158e565b019392505050565b600060ff821660ff8114156117725761177261158e565b6001019291505056fea2646970667358221220855d292a546118bee03dd065f7f5f4e2f6fcc581dcb28badcda4ceba81d7adf364736f6c634300080c0033";

type ProfitsManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProfitsManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProfitsManager__factory extends ContractFactory {
  constructor(...args: ProfitsManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rouletteCA: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ProfitsManager> {
    return super.deploy(
      _rouletteCA,
      overrides || {}
    ) as Promise<ProfitsManager>;
  }
  override getDeployTransaction(
    _rouletteCA: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_rouletteCA, overrides || {});
  }
  override attach(address: string): ProfitsManager {
    return super.attach(address) as ProfitsManager;
  }
  override connect(signer: Signer): ProfitsManager__factory {
    return super.connect(signer) as ProfitsManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProfitsManagerInterface {
    return new utils.Interface(_abi) as ProfitsManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProfitsManager {
    return new Contract(address, _abi, signerOrProvider) as ProfitsManager;
  }
}
