name: GitHub Actions Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'SOLIDITY/**'
jobs:
  Codechecks:
        runs-on: ubuntu-latest
        steps:
            # PNPM
          - uses: pnpm/action-setup@v2
            name: Install pnpm
            id: pnpm-install
            with:
                version: 8
                run_install: false        
          - name: Get pnpm store directory
            id: pnpm-cache
            shell: bash
            run: |
                echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

          - uses: actions/cache@v3
            name: Setup pnpm cache
            with:
                path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
                key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                restore-keys: |
                    ${{ runner.os }}-pnpm-store-
            # PNPM 
          - uses: actions/checkout@v3
          - name: Install dependencies
            run: |
                cd CASINO_DAPP/casino-dapp
                pnpm install
          - name: Run linter checks
            run: |
                cd CASINO_DAPP/casino-dapp
                pnpm run lint
          - name: Run prettier checks
            run: |
                cd CASINO_DAPP/casino-dapp
                pnpm run format

# replaced by vercel-build        
#   Build:
#     runs-on: ubuntu-latest
#     steps:
#       # PNPM
#       - uses: pnpm/action-setup@v2
#         name: Install pnpm
#         id: pnpm-install
#         with:
#             version: 8
#             run_install: false        
#       - name: Get pnpm store directory
#         id: pnpm-cache
#         shell: bash
#         run: |
#             echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

#       - uses: actions/cache@v3
#         name: Setup pnpm cache
#         with:
#             path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
#             key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
#             restore-keys: |
#                 ${{ runner.os }}-pnpm-store-
#       # PNPM 
#       - uses: actions/checkout@v3
#       - name: Install dependencies
#         run: |
#             cd CASINO_DAPP/casino-dapp 
#             pnpm install
#       - name: Run build
#         run: |
#             cd CASINO_DAPP/casino-dapp 
#             pnpm run build

  #Test: #TODO with cypress
    
  Vercel-build:
    runs-on: ubuntu-latest
    steps:
    # PNPM
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
            version: 8
            run_install: false        
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
            echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
            path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
            restore-keys: |
                ${{ runner.os }}-pnpm-store-
    # PNPM
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }} --debug
      - uses: actions/upload-artifact@v3
        with:
             name: verceloutput
             path: .vercel/output                

  Deploy-Production:
    needs: [Codechecks, Vercel-build]
    runs-on: ubuntu-latest
    steps:
      # PNPM
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
            version: 8
            run_install: false        
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
            echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
            path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
            restore-keys: |
                ${{ runner.os }}-pnpm-store-
      # PNPM
      - uses: actions/download-artifact@v3
        with:
             name: verceloutput
             path: .vercel/output   
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}